name: GameCI Template ðŸŽ®

on: push

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  testRunner:
    name: Test in ${{ matrix.testMode }} âœ¨
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - EditMode
          - PlayMode
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: ../Pufferfish/Library
          key: Library-Pufferfish-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-Pufferfish-
            Library-

      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        id: testRunner
        with:
          projectPath: ../Pufferfish
          testMode: ${{ matrix.testMode }}
          checkName: ${{ matrix.testMode }} Test Results
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'

      - uses: actions/upload-artifact@v2
        with:
          name: Test results for (${{ matrix.testMode }})
          path: artifacts

	- uses: actions/upload-artifact@v2
        with:
          name: Coverage results for (${{ matrix.testMode }})
          path: artifacts